name: Node.js CI/CD Deployment

on:
  push:
    branches:
      - master  # Trigger the workflow on push to the 'main' branch
  pull_request:
    branches:
      - master  # Trigger the workflow on pull requests to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Use Node.js version 14

      # Install dependencies
      - name: Install dependencies
        run: npm install

           # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

         
         
         
         # Step 1: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t pushkal26/first-nodejs:latest .

     

      # Step 3: Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push pushkal26/first-nodejs:latest

      # Run SonarQube analysis
      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Store SonarQube token in GitHub Secrets
        run: |
          # Download and install sonar-scanner
          curl -sS https://get.sonarsource.com/sonar-scanner-cli-linux.tar.gz | tar xz
          ./sonar-scanner-*/bin/sonar-scanner -Dsonar.projectKey=your_project_key \
            -Dsonar.host.url=http://<your-sonarqube-instance-ip>:9000 \
            -Dsonar.login=$SONAR_TOKEN    


     

     
